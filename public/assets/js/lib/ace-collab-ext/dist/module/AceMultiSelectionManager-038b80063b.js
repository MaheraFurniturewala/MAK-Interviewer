import{AceSelectionMarker}from"./AceSelectionMarker";export class AceMultiSelectionManager{constructor(e){this._selections={},this._session=e}addSelection(e,t,i,o){if(void 0!==this._selections[e])throw new Error("Selection with id already defined: "+e);const s=new AceSelectionMarker(this._session,e,t,i,o);this._selections[e]=s,this._session.addDynamicMarker(s,!1)}setSelection(e,t){this._getSelection(e).setSelection(t)}clearSelection(e){this._getSelection(e).setSelection(null)}removeSelection(e){const t=this._selections[e];if(void 0===t)throw new Error("Selection not found: "+e);this._session.removeMarker(t.id),delete this._selections[e]}removeAll(){Object.getOwnPropertyNames(this._selections).forEach((e=>{this.removeSelection(this._selections[e].selectionId())}))}_getSelection(e){const t=this._selections[e];if(void 0===t)throw new Error("Selection not found: "+e);return t}}